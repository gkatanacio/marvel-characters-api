// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	marvel "github.com/gkatanacio/marvel-characters-api/internal/marvel"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MarvelDataFetcher is an autogenerated mock type for the MarvelDataFetcher type
type MarvelDataFetcher struct {
	mock.Mock
}

// GetAllCharacters provides a mock function with given fields: from
func (_m *MarvelDataFetcher) GetAllCharacters(from *time.Time) ([]*marvel.MarvelApiCharacterData, error) {
	ret := _m.Called(from)

	var r0 []*marvel.MarvelApiCharacterData
	if rf, ok := ret.Get(0).(func(*time.Time) []*marvel.MarvelApiCharacterData); ok {
		r0 = rf(from)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*marvel.MarvelApiCharacterData)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*time.Time) error); ok {
		r1 = rf(from)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCharacter provides a mock function with given fields: id
func (_m *MarvelDataFetcher) GetCharacter(id int) (*marvel.MarvelApiCharacterData, error) {
	ret := _m.Called(id)

	var r0 *marvel.MarvelApiCharacterData
	if rf, ok := ret.Get(0).(func(int) *marvel.MarvelApiCharacterData); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*marvel.MarvelApiCharacterData)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
